/*
	Generated by KBEngine!
	Please do not modify this file!
	tools = kbcmd
*/

#pragma once

#include "KBECommon.h"
#include "MemoryStream.h"

// engine-c++ messages

namespace KBEngine
{

class KBENGINEPLUGINS_API Message
{
public:
	Message()
	{
		id = 0;
		name = TEXT("");
		msglen = -1;
		argsType = 0;

		argtypes = TArray<uint8>();
	}


	Message(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes)
	{
		id = msgid;
		name = msgname;
		msglen = length;
		argsType = argstype;

		argtypes = msgargtypes;

		// DEBUG_MSG("Message::Message() : (%s / %d / %d)!", 
		//		msgname, (int32)msgid, (int32)msglen));
	}

	virtual ~Message()
	{
	}

	virtual void handleMessage(MemoryStream& msgstream)
	{
	}

public:
	MessageID id;
	FString name;
	int16 msglen;
	TArray<uint8> argtypes;
	int8 argsType;
};

class KBENGINEPLUGINS_API Message_Client_onReloginBaseappFailed : public Message
{
public:
	Message_Client_onReloginBaseappFailed(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onEntityLeaveWorldOptimized : public Message
{
public:
	Message_Client_onEntityLeaveWorldOptimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onRemoteMethodCallOptimized : public Message
{
public:
	Message_Client_onRemoteMethodCallOptimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdatePropertysOptimized : public Message
{
public:
	Message_Client_onUpdatePropertysOptimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onSetEntityPosAndDir : public Message
{
public:
	Message_Client_onSetEntityPosAndDir(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateBasePos : public Message
{
public:
	Message_Client_onUpdateBasePos(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateBaseDir : public Message
{
public:
	Message_Client_onUpdateBaseDir(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateBasePosXZ : public Message
{
public:
	Message_Client_onUpdateBasePosXZ(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData : public Message
{
public:
	Message_Client_onUpdateData(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_ypr : public Message
{
public:
	Message_Client_onUpdateData_ypr(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_yp : public Message
{
public:
	Message_Client_onUpdateData_yp(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_yr : public Message
{
public:
	Message_Client_onUpdateData_yr(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_pr : public Message
{
public:
	Message_Client_onUpdateData_pr(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_y : public Message
{
public:
	Message_Client_onUpdateData_y(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_p : public Message
{
public:
	Message_Client_onUpdateData_p(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_r : public Message
{
public:
	Message_Client_onUpdateData_r(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz : public Message
{
public:
	Message_Client_onUpdateData_xz(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_ypr : public Message
{
public:
	Message_Client_onUpdateData_xz_ypr(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_yp : public Message
{
public:
	Message_Client_onUpdateData_xz_yp(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_yr : public Message
{
public:
	Message_Client_onUpdateData_xz_yr(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_pr : public Message
{
public:
	Message_Client_onUpdateData_xz_pr(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_y : public Message
{
public:
	Message_Client_onUpdateData_xz_y(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_p : public Message
{
public:
	Message_Client_onUpdateData_xz_p(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_r : public Message
{
public:
	Message_Client_onUpdateData_xz_r(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz : public Message
{
public:
	Message_Client_onUpdateData_xyz(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_ypr : public Message
{
public:
	Message_Client_onUpdateData_xyz_ypr(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_yp : public Message
{
public:
	Message_Client_onUpdateData_xyz_yp(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_yr : public Message
{
public:
	Message_Client_onUpdateData_xyz_yr(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_pr : public Message
{
public:
	Message_Client_onUpdateData_xyz_pr(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_y : public Message
{
public:
	Message_Client_onUpdateData_xyz_y(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_p : public Message
{
public:
	Message_Client_onUpdateData_xyz_p(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_r : public Message
{
public:
	Message_Client_onUpdateData_xyz_r(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_ypr_optimized : public Message
{
public:
	Message_Client_onUpdateData_ypr_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_yp_optimized : public Message
{
public:
	Message_Client_onUpdateData_yp_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_yr_optimized : public Message
{
public:
	Message_Client_onUpdateData_yr_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_pr_optimized : public Message
{
public:
	Message_Client_onUpdateData_pr_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_y_optimized : public Message
{
public:
	Message_Client_onUpdateData_y_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_p_optimized : public Message
{
public:
	Message_Client_onUpdateData_p_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_r_optimized : public Message
{
public:
	Message_Client_onUpdateData_r_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_optimized : public Message
{
public:
	Message_Client_onUpdateData_xz_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_ypr_optimized : public Message
{
public:
	Message_Client_onUpdateData_xz_ypr_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_yp_optimized : public Message
{
public:
	Message_Client_onUpdateData_xz_yp_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_yr_optimized : public Message
{
public:
	Message_Client_onUpdateData_xz_yr_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_pr_optimized : public Message
{
public:
	Message_Client_onUpdateData_xz_pr_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_y_optimized : public Message
{
public:
	Message_Client_onUpdateData_xz_y_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_p_optimized : public Message
{
public:
	Message_Client_onUpdateData_xz_p_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xz_r_optimized : public Message
{
public:
	Message_Client_onUpdateData_xz_r_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_optimized : public Message
{
public:
	Message_Client_onUpdateData_xyz_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_ypr_optimized : public Message
{
public:
	Message_Client_onUpdateData_xyz_ypr_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_yp_optimized : public Message
{
public:
	Message_Client_onUpdateData_xyz_yp_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_yr_optimized : public Message
{
public:
	Message_Client_onUpdateData_xyz_yr_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_pr_optimized : public Message
{
public:
	Message_Client_onUpdateData_xyz_pr_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_y_optimized : public Message
{
public:
	Message_Client_onUpdateData_xyz_y_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_p_optimized : public Message
{
public:
	Message_Client_onUpdateData_xyz_p_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdateData_xyz_r_optimized : public Message
{
public:
	Message_Client_onUpdateData_xyz_r_optimized(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onImportServerErrorsDescr : public Message
{
public:
	Message_Client_onImportServerErrorsDescr(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onImportClientSDK : public Message
{
public:
	Message_Client_onImportClientSDK(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_initSpaceData : public Message
{
public:
	Message_Client_initSpaceData(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_setSpaceData : public Message
{
public:
	Message_Client_setSpaceData(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_delSpaceData : public Message
{
public:
	Message_Client_delSpaceData(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onReqAccountResetPasswordCB : public Message
{
public:
	Message_Client_onReqAccountResetPasswordCB(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onReqAccountBindEmailCB : public Message
{
public:
	Message_Client_onReqAccountBindEmailCB(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onReqAccountNewPasswordCB : public Message
{
public:
	Message_Client_onReqAccountNewPasswordCB(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onReloginBaseappSuccessfully : public Message
{
public:
	Message_Client_onReloginBaseappSuccessfully(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onAppActiveTickCB : public Message
{
public:
	Message_Client_onAppActiveTickCB(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onCreateAccountResult : public Message
{
public:
	Message_Client_onCreateAccountResult(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onLoginSuccessfully : public Message
{
public:
	Message_Client_onLoginSuccessfully(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onLoginFailed : public Message
{
public:
	Message_Client_onLoginFailed(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onCreatedProxies : public Message
{
public:
	Message_Client_onCreatedProxies(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onLoginBaseappFailed : public Message
{
public:
	Message_Client_onLoginBaseappFailed(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onRemoteMethodCall : public Message
{
public:
	Message_Client_onRemoteMethodCall(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onEntityEnterWorld : public Message
{
public:
	Message_Client_onEntityEnterWorld(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onEntityLeaveWorld : public Message
{
public:
	Message_Client_onEntityLeaveWorld(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onEntityEnterSpace : public Message
{
public:
	Message_Client_onEntityEnterSpace(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onEntityLeaveSpace : public Message
{
public:
	Message_Client_onEntityLeaveSpace(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onUpdatePropertys : public Message
{
public:
	Message_Client_onUpdatePropertys(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onEntityDestroyed : public Message
{
public:
	Message_Client_onEntityDestroyed(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onStreamDataStarted : public Message
{
public:
	Message_Client_onStreamDataStarted(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onStreamDataRecv : public Message
{
public:
	Message_Client_onStreamDataRecv(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onStreamDataCompleted : public Message
{
public:
	Message_Client_onStreamDataCompleted(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onKicked : public Message
{
public:
	Message_Client_onKicked(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onImportClientMessages : public Message
{
public:
	Message_Client_onImportClientMessages(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onImportClientEntityDef : public Message
{
public:
	Message_Client_onImportClientEntityDef(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onHelloCB : public Message
{
public:
	Message_Client_onHelloCB(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onScriptVersionNotMatch : public Message
{
public:
	Message_Client_onScriptVersionNotMatch(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onVersionNotMatch : public Message
{
public:
	Message_Client_onVersionNotMatch(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Client_onControlEntity : public Message
{
public:
	Message_Client_onControlEntity(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Loginapp_reqCreateAccount : public Message
{
public:
	Message_Loginapp_reqCreateAccount(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Loginapp_login : public Message
{
public:
	Message_Loginapp_login(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Loginapp_hello : public Message
{
public:
	Message_Loginapp_hello(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Loginapp_importClientMessages : public Message
{
public:
	Message_Loginapp_importClientMessages(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Loginapp_reqCreateMailAccount : public Message
{
public:
	Message_Loginapp_reqCreateMailAccount(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Loginapp_importClientSDK : public Message
{
public:
	Message_Loginapp_importClientSDK(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Loginapp_importServerErrorsDescr : public Message
{
public:
	Message_Loginapp_importServerErrorsDescr(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Loginapp_onClientActiveTick : public Message
{
public:
	Message_Loginapp_onClientActiveTick(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Loginapp_reqAccountResetPassword : public Message
{
public:
	Message_Loginapp_reqAccountResetPassword(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Baseapp_logoutBaseapp : public Message
{
public:
	Message_Baseapp_logoutBaseapp(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Baseapp_onUpdateDataFromClient : public Message
{
public:
	Message_Baseapp_onUpdateDataFromClient(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Baseapp_onUpdateDataFromClientForControlledEntity : public Message
{
public:
	Message_Baseapp_onUpdateDataFromClientForControlledEntity(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Baseapp_reqAccountBindEmail : public Message
{
public:
	Message_Baseapp_reqAccountBindEmail(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Baseapp_reqAccountNewPassword : public Message
{
public:
	Message_Baseapp_reqAccountNewPassword(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Entity_forwardEntityMessageToCellappFromClient : public Message
{
public:
	Message_Entity_forwardEntityMessageToCellappFromClient(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Baseapp_hello : public Message
{
public:
	Message_Baseapp_hello(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Baseapp_loginBaseapp : public Message
{
public:
	Message_Baseapp_loginBaseapp(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Baseapp_reloginBaseapp : public Message
{
public:
	Message_Baseapp_reloginBaseapp(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Baseapp_onRemoteCallCellMethodFromClient : public Message
{
public:
	Message_Baseapp_onRemoteCallCellMethodFromClient(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Baseapp_onClientActiveTick : public Message
{
public:
	Message_Baseapp_onClientActiveTick(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Baseapp_importClientMessages : public Message
{
public:
	Message_Baseapp_importClientMessages(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Baseapp_importClientEntityDef : public Message
{
public:
	Message_Baseapp_importClientEntityDef(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Message_Entity_onRemoteMethodCall : public Message
{
public:
	Message_Entity_onRemoteMethodCall(MessageID msgid, const FString& msgname, int16 length, int8 argstype, const TArray<uint8>& msgargtypes):
	Message(msgid, msgname, length, argstype, msgargtypes)
	{

	}

	void handleMessage(MemoryStream& msgstream) override;
};

class KBENGINEPLUGINS_API Messages
{
public:
	static TMap<MessageID, Message*> loginappMessages;
	static TMap<MessageID, Message*> baseappMessages;
	static TMap<MessageID, Message*> clientMessages;
	static TMap<FString, Message*> messages;

	static Message* findClientMessage(MessageID mid)
	{
		return clientMessages.FindRef(mid);
	}

	static Message* findMessage(const FString& mname)
	{
		return messages.FindRef(mname);
	}

	static void clear()
	{
		loginappMessages.Empty();
		baseappMessages.Empty();
		clientMessages.Empty();

		for (auto item : messages)
			delete item.Value;

		messages.Empty();

		initialize();
	}

	static bool initialize()
	{

		TArray<uint8> Client_onReloginBaseappFailed_argstypes;
		Client_onReloginBaseappFailed_argstypes.Add(3);
		Messages::messages.Add(TEXT("Client_onReloginBaseappFailed"), new Message_Client_onReloginBaseappFailed(8, "Client_onReloginBaseappFailed", 2, 0, Client_onReloginBaseappFailed_argstypes));
		Messages::clientMessages.Add(8, Messages::messages["Client_onReloginBaseappFailed"]);

		Messages::messages.Add(TEXT("Client_onEntityLeaveWorldOptimized"), new Message_Client_onEntityLeaveWorldOptimized(9, "Client_onEntityLeaveWorldOptimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(9, Messages::messages["Client_onEntityLeaveWorldOptimized"]);

		Messages::messages.Add(TEXT("Client_onRemoteMethodCallOptimized"), new Message_Client_onRemoteMethodCallOptimized(10, "Client_onRemoteMethodCallOptimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(10, Messages::messages["Client_onRemoteMethodCallOptimized"]);

		Messages::messages.Add(TEXT("Client_onUpdatePropertysOptimized"), new Message_Client_onUpdatePropertysOptimized(11, "Client_onUpdatePropertysOptimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(11, Messages::messages["Client_onUpdatePropertysOptimized"]);

		Messages::messages.Add(TEXT("Client_onSetEntityPosAndDir"), new Message_Client_onSetEntityPosAndDir(12, "Client_onSetEntityPosAndDir", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(12, Messages::messages["Client_onSetEntityPosAndDir"]);


		TArray<uint8> Client_onUpdateBasePos_argstypes;
		Client_onUpdateBasePos_argstypes.Add(13);
		Client_onUpdateBasePos_argstypes.Add(13);
		Client_onUpdateBasePos_argstypes.Add(13);
		Messages::messages.Add(TEXT("Client_onUpdateBasePos"), new Message_Client_onUpdateBasePos(13, "Client_onUpdateBasePos", 12, 0, Client_onUpdateBasePos_argstypes));
		Messages::clientMessages.Add(13, Messages::messages["Client_onUpdateBasePos"]);

		Messages::messages.Add(TEXT("Client_onUpdateBaseDir"), new Message_Client_onUpdateBaseDir(14, "Client_onUpdateBaseDir", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(14, Messages::messages["Client_onUpdateBaseDir"]);


		TArray<uint8> Client_onUpdateBasePosXZ_argstypes;
		Client_onUpdateBasePosXZ_argstypes.Add(13);
		Client_onUpdateBasePosXZ_argstypes.Add(13);
		Messages::messages.Add(TEXT("Client_onUpdateBasePosXZ"), new Message_Client_onUpdateBasePosXZ(15, "Client_onUpdateBasePosXZ", 8, 0, Client_onUpdateBasePosXZ_argstypes));
		Messages::clientMessages.Add(15, Messages::messages["Client_onUpdateBasePosXZ"]);

		Messages::messages.Add(TEXT("Client_onUpdateData"), new Message_Client_onUpdateData(16, "Client_onUpdateData", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(16, Messages::messages["Client_onUpdateData"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_ypr"), new Message_Client_onUpdateData_ypr(17, "Client_onUpdateData_ypr", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(17, Messages::messages["Client_onUpdateData_ypr"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_yp"), new Message_Client_onUpdateData_yp(18, "Client_onUpdateData_yp", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(18, Messages::messages["Client_onUpdateData_yp"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_yr"), new Message_Client_onUpdateData_yr(19, "Client_onUpdateData_yr", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(19, Messages::messages["Client_onUpdateData_yr"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_pr"), new Message_Client_onUpdateData_pr(20, "Client_onUpdateData_pr", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(20, Messages::messages["Client_onUpdateData_pr"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_y"), new Message_Client_onUpdateData_y(21, "Client_onUpdateData_y", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(21, Messages::messages["Client_onUpdateData_y"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_p"), new Message_Client_onUpdateData_p(22, "Client_onUpdateData_p", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(22, Messages::messages["Client_onUpdateData_p"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_r"), new Message_Client_onUpdateData_r(23, "Client_onUpdateData_r", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(23, Messages::messages["Client_onUpdateData_r"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz"), new Message_Client_onUpdateData_xz(24, "Client_onUpdateData_xz", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(24, Messages::messages["Client_onUpdateData_xz"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_ypr"), new Message_Client_onUpdateData_xz_ypr(25, "Client_onUpdateData_xz_ypr", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(25, Messages::messages["Client_onUpdateData_xz_ypr"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_yp"), new Message_Client_onUpdateData_xz_yp(26, "Client_onUpdateData_xz_yp", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(26, Messages::messages["Client_onUpdateData_xz_yp"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_yr"), new Message_Client_onUpdateData_xz_yr(27, "Client_onUpdateData_xz_yr", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(27, Messages::messages["Client_onUpdateData_xz_yr"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_pr"), new Message_Client_onUpdateData_xz_pr(28, "Client_onUpdateData_xz_pr", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(28, Messages::messages["Client_onUpdateData_xz_pr"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_y"), new Message_Client_onUpdateData_xz_y(29, "Client_onUpdateData_xz_y", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(29, Messages::messages["Client_onUpdateData_xz_y"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_p"), new Message_Client_onUpdateData_xz_p(30, "Client_onUpdateData_xz_p", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(30, Messages::messages["Client_onUpdateData_xz_p"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_r"), new Message_Client_onUpdateData_xz_r(31, "Client_onUpdateData_xz_r", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(31, Messages::messages["Client_onUpdateData_xz_r"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz"), new Message_Client_onUpdateData_xyz(32, "Client_onUpdateData_xyz", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(32, Messages::messages["Client_onUpdateData_xyz"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_ypr"), new Message_Client_onUpdateData_xyz_ypr(33, "Client_onUpdateData_xyz_ypr", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(33, Messages::messages["Client_onUpdateData_xyz_ypr"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_yp"), new Message_Client_onUpdateData_xyz_yp(34, "Client_onUpdateData_xyz_yp", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(34, Messages::messages["Client_onUpdateData_xyz_yp"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_yr"), new Message_Client_onUpdateData_xyz_yr(35, "Client_onUpdateData_xyz_yr", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(35, Messages::messages["Client_onUpdateData_xyz_yr"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_pr"), new Message_Client_onUpdateData_xyz_pr(36, "Client_onUpdateData_xyz_pr", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(36, Messages::messages["Client_onUpdateData_xyz_pr"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_y"), new Message_Client_onUpdateData_xyz_y(37, "Client_onUpdateData_xyz_y", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(37, Messages::messages["Client_onUpdateData_xyz_y"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_p"), new Message_Client_onUpdateData_xyz_p(38, "Client_onUpdateData_xyz_p", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(38, Messages::messages["Client_onUpdateData_xyz_p"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_r"), new Message_Client_onUpdateData_xyz_r(39, "Client_onUpdateData_xyz_r", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(39, Messages::messages["Client_onUpdateData_xyz_r"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_ypr_optimized"), new Message_Client_onUpdateData_ypr_optimized(40, "Client_onUpdateData_ypr_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(40, Messages::messages["Client_onUpdateData_ypr_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_yp_optimized"), new Message_Client_onUpdateData_yp_optimized(41, "Client_onUpdateData_yp_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(41, Messages::messages["Client_onUpdateData_yp_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_yr_optimized"), new Message_Client_onUpdateData_yr_optimized(42, "Client_onUpdateData_yr_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(42, Messages::messages["Client_onUpdateData_yr_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_pr_optimized"), new Message_Client_onUpdateData_pr_optimized(43, "Client_onUpdateData_pr_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(43, Messages::messages["Client_onUpdateData_pr_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_y_optimized"), new Message_Client_onUpdateData_y_optimized(44, "Client_onUpdateData_y_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(44, Messages::messages["Client_onUpdateData_y_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_p_optimized"), new Message_Client_onUpdateData_p_optimized(45, "Client_onUpdateData_p_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(45, Messages::messages["Client_onUpdateData_p_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_r_optimized"), new Message_Client_onUpdateData_r_optimized(46, "Client_onUpdateData_r_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(46, Messages::messages["Client_onUpdateData_r_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_optimized"), new Message_Client_onUpdateData_xz_optimized(47, "Client_onUpdateData_xz_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(47, Messages::messages["Client_onUpdateData_xz_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_ypr_optimized"), new Message_Client_onUpdateData_xz_ypr_optimized(48, "Client_onUpdateData_xz_ypr_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(48, Messages::messages["Client_onUpdateData_xz_ypr_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_yp_optimized"), new Message_Client_onUpdateData_xz_yp_optimized(49, "Client_onUpdateData_xz_yp_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(49, Messages::messages["Client_onUpdateData_xz_yp_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_yr_optimized"), new Message_Client_onUpdateData_xz_yr_optimized(50, "Client_onUpdateData_xz_yr_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(50, Messages::messages["Client_onUpdateData_xz_yr_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_pr_optimized"), new Message_Client_onUpdateData_xz_pr_optimized(51, "Client_onUpdateData_xz_pr_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(51, Messages::messages["Client_onUpdateData_xz_pr_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_y_optimized"), new Message_Client_onUpdateData_xz_y_optimized(52, "Client_onUpdateData_xz_y_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(52, Messages::messages["Client_onUpdateData_xz_y_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_p_optimized"), new Message_Client_onUpdateData_xz_p_optimized(53, "Client_onUpdateData_xz_p_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(53, Messages::messages["Client_onUpdateData_xz_p_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xz_r_optimized"), new Message_Client_onUpdateData_xz_r_optimized(54, "Client_onUpdateData_xz_r_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(54, Messages::messages["Client_onUpdateData_xz_r_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_optimized"), new Message_Client_onUpdateData_xyz_optimized(55, "Client_onUpdateData_xyz_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(55, Messages::messages["Client_onUpdateData_xyz_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_ypr_optimized"), new Message_Client_onUpdateData_xyz_ypr_optimized(56, "Client_onUpdateData_xyz_ypr_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(56, Messages::messages["Client_onUpdateData_xyz_ypr_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_yp_optimized"), new Message_Client_onUpdateData_xyz_yp_optimized(57, "Client_onUpdateData_xyz_yp_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(57, Messages::messages["Client_onUpdateData_xyz_yp_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_yr_optimized"), new Message_Client_onUpdateData_xyz_yr_optimized(58, "Client_onUpdateData_xyz_yr_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(58, Messages::messages["Client_onUpdateData_xyz_yr_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_pr_optimized"), new Message_Client_onUpdateData_xyz_pr_optimized(59, "Client_onUpdateData_xyz_pr_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(59, Messages::messages["Client_onUpdateData_xyz_pr_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_y_optimized"), new Message_Client_onUpdateData_xyz_y_optimized(60, "Client_onUpdateData_xyz_y_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(60, Messages::messages["Client_onUpdateData_xyz_y_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_p_optimized"), new Message_Client_onUpdateData_xyz_p_optimized(61, "Client_onUpdateData_xyz_p_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(61, Messages::messages["Client_onUpdateData_xyz_p_optimized"]);

		Messages::messages.Add(TEXT("Client_onUpdateData_xyz_r_optimized"), new Message_Client_onUpdateData_xyz_r_optimized(62, "Client_onUpdateData_xyz_r_optimized", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(62, Messages::messages["Client_onUpdateData_xyz_r_optimized"]);

		Messages::messages.Add(TEXT("Client_onImportServerErrorsDescr"), new Message_Client_onImportServerErrorsDescr(63, "Client_onImportServerErrorsDescr", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(63, Messages::messages["Client_onImportServerErrorsDescr"]);

		Messages::messages.Add(TEXT("Client_onImportClientSDK"), new Message_Client_onImportClientSDK(64, "Client_onImportClientSDK", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(64, Messages::messages["Client_onImportClientSDK"]);

		Messages::messages.Add(TEXT("Client_initSpaceData"), new Message_Client_initSpaceData(65, "Client_initSpaceData", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(65, Messages::messages["Client_initSpaceData"]);


		TArray<uint8> Client_setSpaceData_argstypes;
		Client_setSpaceData_argstypes.Add(4);
		Client_setSpaceData_argstypes.Add(1);
		Client_setSpaceData_argstypes.Add(1);
		Messages::messages.Add(TEXT("Client_setSpaceData"), new Message_Client_setSpaceData(66, "Client_setSpaceData", -1, 0, Client_setSpaceData_argstypes));
		Messages::clientMessages.Add(66, Messages::messages["Client_setSpaceData"]);


		TArray<uint8> Client_delSpaceData_argstypes;
		Client_delSpaceData_argstypes.Add(4);
		Client_delSpaceData_argstypes.Add(1);
		Messages::messages.Add(TEXT("Client_delSpaceData"), new Message_Client_delSpaceData(67, "Client_delSpaceData", -1, 0, Client_delSpaceData_argstypes));
		Messages::clientMessages.Add(67, Messages::messages["Client_delSpaceData"]);


		TArray<uint8> Client_onReqAccountResetPasswordCB_argstypes;
		Client_onReqAccountResetPasswordCB_argstypes.Add(3);
		Messages::messages.Add(TEXT("Client_onReqAccountResetPasswordCB"), new Message_Client_onReqAccountResetPasswordCB(68, "Client_onReqAccountResetPasswordCB", 2, 0, Client_onReqAccountResetPasswordCB_argstypes));
		Messages::clientMessages.Add(68, Messages::messages["Client_onReqAccountResetPasswordCB"]);


		TArray<uint8> Client_onReqAccountBindEmailCB_argstypes;
		Client_onReqAccountBindEmailCB_argstypes.Add(3);
		Messages::messages.Add(TEXT("Client_onReqAccountBindEmailCB"), new Message_Client_onReqAccountBindEmailCB(69, "Client_onReqAccountBindEmailCB", 2, 0, Client_onReqAccountBindEmailCB_argstypes));
		Messages::clientMessages.Add(69, Messages::messages["Client_onReqAccountBindEmailCB"]);


		TArray<uint8> Client_onReqAccountNewPasswordCB_argstypes;
		Client_onReqAccountNewPasswordCB_argstypes.Add(3);
		Messages::messages.Add(TEXT("Client_onReqAccountNewPasswordCB"), new Message_Client_onReqAccountNewPasswordCB(70, "Client_onReqAccountNewPasswordCB", 2, 0, Client_onReqAccountNewPasswordCB_argstypes));
		Messages::clientMessages.Add(70, Messages::messages["Client_onReqAccountNewPasswordCB"]);

		Messages::messages.Add(TEXT("Client_onReloginBaseappSuccessfully"), new Message_Client_onReloginBaseappSuccessfully(71, "Client_onReloginBaseappSuccessfully", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(71, Messages::messages["Client_onReloginBaseappSuccessfully"]);

		Messages::messages.Add(TEXT("Client_onAppActiveTickCB"), new Message_Client_onAppActiveTickCB(72, "Client_onAppActiveTickCB", 0, 0, TArray<uint8>()));
		Messages::clientMessages.Add(72, Messages::messages["Client_onAppActiveTickCB"]);

		Messages::messages.Add(TEXT("Client_onCreateAccountResult"), new Message_Client_onCreateAccountResult(501, "Client_onCreateAccountResult", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(501, Messages::messages["Client_onCreateAccountResult"]);

		Messages::messages.Add(TEXT("Client_onLoginSuccessfully"), new Message_Client_onLoginSuccessfully(502, "Client_onLoginSuccessfully", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(502, Messages::messages["Client_onLoginSuccessfully"]);

		Messages::messages.Add(TEXT("Client_onLoginFailed"), new Message_Client_onLoginFailed(503, "Client_onLoginFailed", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(503, Messages::messages["Client_onLoginFailed"]);


		TArray<uint8> Client_onCreatedProxies_argstypes;
		Client_onCreatedProxies_argstypes.Add(5);
		Client_onCreatedProxies_argstypes.Add(8);
		Client_onCreatedProxies_argstypes.Add(1);
		Messages::messages.Add(TEXT("Client_onCreatedProxies"), new Message_Client_onCreatedProxies(504, "Client_onCreatedProxies", -1, 0, Client_onCreatedProxies_argstypes));
		Messages::clientMessages.Add(504, Messages::messages["Client_onCreatedProxies"]);


		TArray<uint8> Client_onLoginBaseappFailed_argstypes;
		Client_onLoginBaseappFailed_argstypes.Add(3);
		Messages::messages.Add(TEXT("Client_onLoginBaseappFailed"), new Message_Client_onLoginBaseappFailed(505, "Client_onLoginBaseappFailed", 2, 0, Client_onLoginBaseappFailed_argstypes));
		Messages::clientMessages.Add(505, Messages::messages["Client_onLoginBaseappFailed"]);

		Messages::messages.Add(TEXT("Client_onRemoteMethodCall"), new Message_Client_onRemoteMethodCall(506, "Client_onRemoteMethodCall", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(506, Messages::messages["Client_onRemoteMethodCall"]);

		Messages::messages.Add(TEXT("Client_onEntityEnterWorld"), new Message_Client_onEntityEnterWorld(507, "Client_onEntityEnterWorld", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(507, Messages::messages["Client_onEntityEnterWorld"]);


		TArray<uint8> Client_onEntityLeaveWorld_argstypes;
		Client_onEntityLeaveWorld_argstypes.Add(8);
		Messages::messages.Add(TEXT("Client_onEntityLeaveWorld"), new Message_Client_onEntityLeaveWorld(508, "Client_onEntityLeaveWorld", 4, 0, Client_onEntityLeaveWorld_argstypes));
		Messages::clientMessages.Add(508, Messages::messages["Client_onEntityLeaveWorld"]);

		Messages::messages.Add(TEXT("Client_onEntityEnterSpace"), new Message_Client_onEntityEnterSpace(509, "Client_onEntityEnterSpace", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(509, Messages::messages["Client_onEntityEnterSpace"]);


		TArray<uint8> Client_onEntityLeaveSpace_argstypes;
		Client_onEntityLeaveSpace_argstypes.Add(8);
		Messages::messages.Add(TEXT("Client_onEntityLeaveSpace"), new Message_Client_onEntityLeaveSpace(510, "Client_onEntityLeaveSpace", 4, 0, Client_onEntityLeaveSpace_argstypes));
		Messages::clientMessages.Add(510, Messages::messages["Client_onEntityLeaveSpace"]);

		Messages::messages.Add(TEXT("Client_onUpdatePropertys"), new Message_Client_onUpdatePropertys(511, "Client_onUpdatePropertys", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(511, Messages::messages["Client_onUpdatePropertys"]);


		TArray<uint8> Client_onEntityDestroyed_argstypes;
		Client_onEntityDestroyed_argstypes.Add(8);
		Messages::messages.Add(TEXT("Client_onEntityDestroyed"), new Message_Client_onEntityDestroyed(512, "Client_onEntityDestroyed", 4, 0, Client_onEntityDestroyed_argstypes));
		Messages::clientMessages.Add(512, Messages::messages["Client_onEntityDestroyed"]);


		TArray<uint8> Client_onStreamDataStarted_argstypes;
		Client_onStreamDataStarted_argstypes.Add(7);
		Client_onStreamDataStarted_argstypes.Add(4);
		Client_onStreamDataStarted_argstypes.Add(1);
		Messages::messages.Add(TEXT("Client_onStreamDataStarted"), new Message_Client_onStreamDataStarted(514, "Client_onStreamDataStarted", -1, 0, Client_onStreamDataStarted_argstypes));
		Messages::clientMessages.Add(514, Messages::messages["Client_onStreamDataStarted"]);

		Messages::messages.Add(TEXT("Client_onStreamDataRecv"), new Message_Client_onStreamDataRecv(515, "Client_onStreamDataRecv", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(515, Messages::messages["Client_onStreamDataRecv"]);


		TArray<uint8> Client_onStreamDataCompleted_argstypes;
		Client_onStreamDataCompleted_argstypes.Add(7);
		Messages::messages.Add(TEXT("Client_onStreamDataCompleted"), new Message_Client_onStreamDataCompleted(516, "Client_onStreamDataCompleted", 2, 0, Client_onStreamDataCompleted_argstypes));
		Messages::clientMessages.Add(516, Messages::messages["Client_onStreamDataCompleted"]);


		TArray<uint8> Client_onKicked_argstypes;
		Client_onKicked_argstypes.Add(3);
		Messages::messages.Add(TEXT("Client_onKicked"), new Message_Client_onKicked(517, "Client_onKicked", 2, 0, Client_onKicked_argstypes));
		Messages::clientMessages.Add(517, Messages::messages["Client_onKicked"]);

		Messages::messages.Add(TEXT("Client_onImportClientMessages"), new Message_Client_onImportClientMessages(518, "Client_onImportClientMessages", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(518, Messages::messages["Client_onImportClientMessages"]);

		Messages::messages.Add(TEXT("Client_onImportClientEntityDef"), new Message_Client_onImportClientEntityDef(519, "Client_onImportClientEntityDef", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(519, Messages::messages["Client_onImportClientEntityDef"]);

		Messages::messages.Add(TEXT("Client_onHelloCB"), new Message_Client_onHelloCB(521, "Client_onHelloCB", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(521, Messages::messages["Client_onHelloCB"]);

		Messages::messages.Add(TEXT("Client_onScriptVersionNotMatch"), new Message_Client_onScriptVersionNotMatch(522, "Client_onScriptVersionNotMatch", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(522, Messages::messages["Client_onScriptVersionNotMatch"]);

		Messages::messages.Add(TEXT("Client_onVersionNotMatch"), new Message_Client_onVersionNotMatch(523, "Client_onVersionNotMatch", -1, -1, TArray<uint8>()));
		Messages::clientMessages.Add(523, Messages::messages["Client_onVersionNotMatch"]);


		TArray<uint8> Client_onControlEntity_argstypes;
		Client_onControlEntity_argstypes.Add(8);
		Client_onControlEntity_argstypes.Add(6);
		Messages::messages.Add(TEXT("Client_onControlEntity"), new Message_Client_onControlEntity(524, "Client_onControlEntity", 5, 0, Client_onControlEntity_argstypes));
		Messages::clientMessages.Add(524, Messages::messages["Client_onControlEntity"]);

		Messages::messages.Add(TEXT("Loginapp_reqCreateAccount"), new Message_Loginapp_reqCreateAccount(2, "Loginapp_reqCreateAccount", -1, 0, TArray<uint8>()));
		Messages::loginappMessages.Add(2, Messages::messages["Loginapp_reqCreateAccount"]);

		Messages::messages.Add(TEXT("Loginapp_login"), new Message_Loginapp_login(3, "Loginapp_login", -1, 0, TArray<uint8>()));
		Messages::loginappMessages.Add(3, Messages::messages["Loginapp_login"]);

		Messages::messages.Add(TEXT("Loginapp_hello"), new Message_Loginapp_hello(4, "Loginapp_hello", -1, 0, TArray<uint8>()));
		Messages::loginappMessages.Add(4, Messages::messages["Loginapp_hello"]);

		Messages::messages.Add(TEXT("Loginapp_importClientMessages"), new Message_Loginapp_importClientMessages(5, "Loginapp_importClientMessages", 0, 0, TArray<uint8>()));
		Messages::loginappMessages.Add(5, Messages::messages["Loginapp_importClientMessages"]);

		Messages::messages.Add(TEXT("Loginapp_reqCreateMailAccount"), new Message_Loginapp_reqCreateMailAccount(6, "Loginapp_reqCreateMailAccount", -1, 0, TArray<uint8>()));
		Messages::loginappMessages.Add(6, Messages::messages["Loginapp_reqCreateMailAccount"]);

		Messages::messages.Add(TEXT("Loginapp_importClientSDK"), new Message_Loginapp_importClientSDK(7, "Loginapp_importClientSDK", -1, 0, TArray<uint8>()));
		Messages::loginappMessages.Add(7, Messages::messages["Loginapp_importClientSDK"]);

		Messages::messages.Add(TEXT("Loginapp_importServerErrorsDescr"), new Message_Loginapp_importServerErrorsDescr(8, "Loginapp_importServerErrorsDescr", 0, 0, TArray<uint8>()));
		Messages::loginappMessages.Add(8, Messages::messages["Loginapp_importServerErrorsDescr"]);

		Messages::messages.Add(TEXT("Loginapp_onClientActiveTick"), new Message_Loginapp_onClientActiveTick(11, "Loginapp_onClientActiveTick", 0, 0, TArray<uint8>()));
		Messages::loginappMessages.Add(11, Messages::messages["Loginapp_onClientActiveTick"]);


		TArray<uint8> Loginapp_reqAccountResetPassword_argstypes;
		Loginapp_reqAccountResetPassword_argstypes.Add(1);
		Messages::messages.Add(TEXT("Loginapp_reqAccountResetPassword"), new Message_Loginapp_reqAccountResetPassword(12, "Loginapp_reqAccountResetPassword", -1, 0, Loginapp_reqAccountResetPassword_argstypes));
		Messages::loginappMessages.Add(12, Messages::messages["Loginapp_reqAccountResetPassword"]);


		TArray<uint8> Baseapp_logoutBaseapp_argstypes;
		Baseapp_logoutBaseapp_argstypes.Add(5);
		Baseapp_logoutBaseapp_argstypes.Add(8);
		Messages::messages.Add(TEXT("Baseapp_logoutBaseapp"), new Message_Baseapp_logoutBaseapp(24, "Baseapp_logoutBaseapp", 12, 0, Baseapp_logoutBaseapp_argstypes));
		Messages::baseappMessages.Add(24, Messages::messages["Baseapp_logoutBaseapp"]);

		Messages::messages.Add(TEXT("Baseapp_onUpdateDataFromClient"), new Message_Baseapp_onUpdateDataFromClient(27, "Baseapp_onUpdateDataFromClient", -1, -1, TArray<uint8>()));
		Messages::baseappMessages.Add(27, Messages::messages["Baseapp_onUpdateDataFromClient"]);

		Messages::messages.Add(TEXT("Baseapp_onUpdateDataFromClientForControlledEntity"), new Message_Baseapp_onUpdateDataFromClientForControlledEntity(28, "Baseapp_onUpdateDataFromClientForControlledEntity", -1, -1, TArray<uint8>()));
		Messages::baseappMessages.Add(28, Messages::messages["Baseapp_onUpdateDataFromClientForControlledEntity"]);


		TArray<uint8> Baseapp_reqAccountBindEmail_argstypes;
		Baseapp_reqAccountBindEmail_argstypes.Add(8);
		Baseapp_reqAccountBindEmail_argstypes.Add(1);
		Baseapp_reqAccountBindEmail_argstypes.Add(1);
		Messages::messages.Add(TEXT("Baseapp_reqAccountBindEmail"), new Message_Baseapp_reqAccountBindEmail(51, "Baseapp_reqAccountBindEmail", -1, 0, Baseapp_reqAccountBindEmail_argstypes));
		Messages::baseappMessages.Add(51, Messages::messages["Baseapp_reqAccountBindEmail"]);


		TArray<uint8> Baseapp_reqAccountNewPassword_argstypes;
		Baseapp_reqAccountNewPassword_argstypes.Add(8);
		Baseapp_reqAccountNewPassword_argstypes.Add(1);
		Baseapp_reqAccountNewPassword_argstypes.Add(1);
		Messages::messages.Add(TEXT("Baseapp_reqAccountNewPassword"), new Message_Baseapp_reqAccountNewPassword(54, "Baseapp_reqAccountNewPassword", -1, 0, Baseapp_reqAccountNewPassword_argstypes));
		Messages::baseappMessages.Add(54, Messages::messages["Baseapp_reqAccountNewPassword"]);

		Messages::messages.Add(TEXT("Entity_forwardEntityMessageToCellappFromClient"), new Message_Entity_forwardEntityMessageToCellappFromClient(58, "Entity_forwardEntityMessageToCellappFromClient", -1, -1, TArray<uint8>()));
		Messages::baseappMessages.Add(58, Messages::messages["Entity_forwardEntityMessageToCellappFromClient"]);

		Messages::messages.Add(TEXT("Baseapp_hello"), new Message_Baseapp_hello(200, "Baseapp_hello", -1, -1, TArray<uint8>()));
		Messages::baseappMessages.Add(200, Messages::messages["Baseapp_hello"]);


		TArray<uint8> Baseapp_loginBaseapp_argstypes;
		Baseapp_loginBaseapp_argstypes.Add(1);
		Baseapp_loginBaseapp_argstypes.Add(1);
		Messages::messages.Add(TEXT("Baseapp_loginBaseapp"), new Message_Baseapp_loginBaseapp(202, "Baseapp_loginBaseapp", -1, 0, Baseapp_loginBaseapp_argstypes));
		Messages::baseappMessages.Add(202, Messages::messages["Baseapp_loginBaseapp"]);


		TArray<uint8> Baseapp_reloginBaseapp_argstypes;
		Baseapp_reloginBaseapp_argstypes.Add(1);
		Baseapp_reloginBaseapp_argstypes.Add(1);
		Baseapp_reloginBaseapp_argstypes.Add(5);
		Baseapp_reloginBaseapp_argstypes.Add(8);
		Messages::messages.Add(TEXT("Baseapp_reloginBaseapp"), new Message_Baseapp_reloginBaseapp(204, "Baseapp_reloginBaseapp", -1, 0, Baseapp_reloginBaseapp_argstypes));
		Messages::baseappMessages.Add(204, Messages::messages["Baseapp_reloginBaseapp"]);

		Messages::messages.Add(TEXT("Baseapp_onRemoteCallCellMethodFromClient"), new Message_Baseapp_onRemoteCallCellMethodFromClient(205, "Baseapp_onRemoteCallCellMethodFromClient", -1, -1, TArray<uint8>()));
		Messages::baseappMessages.Add(205, Messages::messages["Baseapp_onRemoteCallCellMethodFromClient"]);

		Messages::messages.Add(TEXT("Baseapp_onClientActiveTick"), new Message_Baseapp_onClientActiveTick(206, "Baseapp_onClientActiveTick", 0, 0, TArray<uint8>()));
		Messages::baseappMessages.Add(206, Messages::messages["Baseapp_onClientActiveTick"]);

		Messages::messages.Add(TEXT("Baseapp_importClientMessages"), new Message_Baseapp_importClientMessages(207, "Baseapp_importClientMessages", 0, 0, TArray<uint8>()));
		Messages::baseappMessages.Add(207, Messages::messages["Baseapp_importClientMessages"]);

		Messages::messages.Add(TEXT("Baseapp_importClientEntityDef"), new Message_Baseapp_importClientEntityDef(208, "Baseapp_importClientEntityDef", 0, 0, TArray<uint8>()));
		Messages::baseappMessages.Add(208, Messages::messages["Baseapp_importClientEntityDef"]);

		Messages::messages.Add(TEXT("Entity_onRemoteMethodCall"), new Message_Entity_onRemoteMethodCall(302, "Entity_onRemoteMethodCall", -1, -1, TArray<uint8>()));
		Messages::baseappMessages.Add(302, Messages::messages["Entity_onRemoteMethodCall"]);


		return true;
	}
}
;
}